iOS APP 进入后台与 Android 后台有着较大区别. 

iOS 在 "后台" 有两种状态. 这也是为什么 "后台" 被双引号括起来. 我们回顾一下 [整体架构](TODO: link) 中进程的状态转移图:

![](./assets/app%20状态转移.png)

大部分 APP 进入后台首先会进入 Background 状态, 改状态可以执行代码, 但是只能持续约 3min. 此状态下如果大量的执行代码还会导致系统 terminate 进程, 这也是 iOS 限制后台应用的一项措施.

超时后会进入 Suspended 状态. 这种状态下程序无法执行任何代码, 程序处于休眠.

### 后台长期运行

有如下几种 mode 可以让 APP 在后台长期运行, 比如音乐播放器, 导航应用等等. 

| Mode | 描述 | 链接 |
| :-: | :- | :- |
| audio | 音频类 | https://developer.apple.com/library/archive/documentation/Audio/Conceptual/AudioSessionProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007875 |
| location | 位置服务类 | https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/LocationAwarenessPG/Introduction/Introduction.html#//apple_ref/doc/uid/TP40009497 |
| voip | 网络电话 | https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/StrategiesforImplementingYourApp/StrategiesforImplementingYourApp.html#//apple_ref/doc/uid/TP40007072-CH5-SW13 |
| newsstand-content | 书架类应用 | https://developer.apple.com/documentation/newsstandkit |
| external-accessory | 智能硬件类应用 | 
| bluetooth-central, bluetooth-peripheral | 蓝牙类 |
| fetch | 偶尔需要从网络获取少量内容的应用 | 
| remote-notification | 收到推送先唤起进程从而下载新内容而不是直接弹提醒 | https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/index.html#//apple_ref/doc/uid/TP40008194 |


其中 Mode 一列就是 Info.plist 文件中 `UIBackgroundModes` 对应的数组的值. 

### 后台下载

### Notification

### APP 后台快照

Shortly after an app delegate’s applicationDidEnterBackground: method returns, the system takes a snapshot of the app’s windows. Similarly, when an app is woken up to perform background tasks, the system may take a new snapshot to reflect any relevant changes. For example, when an app is woken to process downloaded items, the system takes a new snapshot so that can reflect any changes caused by the incorporation of the items. 
If you make changes to your views upon entering the background, you can call the snapshotViewAfterScreenUpdates: method of your main view to force those changes to be rendered. Calling the setNeedsDisplay method on a view is ineffective for snapshots because the snapshot is taken before the next drawing cycle, thus preventing any changes from being rendered. Calling the snapshotViewAfterScreenUpdates: method with a value of YES forces an immediate update to the underlying buffers that the snapshot machinery uses.

# 唤醒机制

APP 由于 crash 或者被系统 terminate 等原因死掉, 只要 **不是被用户杀掉**, 那么会在以下几种情况下被唤醒.

| APP Mode | 唤醒时机 |
| :-: | :- |
| location | 系统收到符合 APP 设置的 location update 消息 <br/> 设备进入/退出 registered region (可能是地理区域, 可能是 iBeacon 区域) |
| audio | 系统 audio 框架在需要 app 参与处理的时候 |
| bluetooth | 收到 Central/Peripheral 的命令或者数据时 |
| 后台下载 | 使用 NSURLSession 进行下载时, 当所有任务完成或者收到 error 的时候 | 

### .

当使用 NSURLSession 进行上传/下载时, 如果系统 terminate 了进程, 下载会继续进行, 一旦下载完成还会拉起你的进程. 但如果用户 terminate 你的应用, 那么任何没有进行的任务都会被 cancel.